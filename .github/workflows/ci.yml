name: ci

on:
  push:
    branches: 
      - main

permissions:
  id-token: write
  contents: read

jobs: 
  build:
    name: 'Build and push'
    runs-on: ubuntu-latest
    # strategy:
    #   matrix:
    #     node-version: [16, 18, 20, 22]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Run tests
        run: pnpm test

      - name: Generate tag
        id: generate_tag
        run:  |
          SHA=$(echo $GITHUB_SHA | head -c7)
          echo "sha=$SHA" >> $GITHUB_OUTPUT
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::269624241181:role/ecr-role
          aws-region: us-east-2
    
      - name: Login to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build Docker image
        env: 
          REGISTRY: ${{steps.login-ecr.outputs.registry}}
          TAG: ${{ steps.generate_tag.outputs.sha }}
        run: | 
          docker build -t $REGISTRY/docker-ci:$TAG .
          docker push $REGISTRY/docker-ci:$TAG